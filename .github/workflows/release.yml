name: release

env:
  GO_VERSION: '1.23'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Build & Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
        format: [tar.gz, zip]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Extract version from tag
        id: vars
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Set output file name
        id: name
        run: |
          echo "filename=tfs-${{ steps.vars.outputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}" >> $GITHUB_OUTPUT

      - name: Build binary
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p build
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o build/tfs-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Archive binary
        run: |
          mkdir -p dist
          if [[ "${{ matrix.format }}" == "zip" ]]; then
            zip -j "dist/${{ steps.name.outputs.filename }}.zip" build/tfs
          else
            tar -czf "dist/${{ steps.name.outputs.filename }}.tar.gz" -C build tfs
          fi
        
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
